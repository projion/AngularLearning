{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction FormsComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormsComponent_div_10_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formValueControl(\"name\").errors == null ? null : ctx_r0.formValueControl(\"name\").errors[\"required\"]);\n  }\n}\nexport class FormsComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.loginform = this.fb.group({\n      name: ['', Validators.required],\n      password: [''],\n      email: ['']\n    });\n  }\n  formValueControl(name) {\n    return this.loginform.get(name);\n  }\n  dataSubmit() {\n    console.log(this.loginform.valid);\n  }\n}\nFormsComponent.ɵfac = function FormsComponent_Factory(t) {\n  return new (t || FormsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormsComponent,\n  selectors: [[\"app-forms\"]],\n  decls: 22,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-4\", \"offset-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mt-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Enter password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Enter Valid Email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"mt-2\"], [\"type\", \"submit\", 1, \"btn-btn-submit\"]],\n  template: function FormsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FormsComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.dataSubmit();\n      });\n      i0.ɵɵelementStart(4, \"h1\");\n      i0.ɵɵtext(5, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, FormsComponent_div_10_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"button\", 13);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.formValueControl(\"name\").invalid && (ctx.formValueControl(\"name\").dirty || ctx.formValueControl(\"name\").touched));\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".row[_ngcontent-%COMP%] {\\n  width: auto;\\n  background-color: rgb(60, 103, 178);\\n  height: 100vh;\\n}\\nform[_ngcontent-%COMP%] {\\n  position: center;\\n  margin-top: 10px;\\n  padding: 20px;\\n  background-color: bisque;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVhY2hlci9mb3Jtcy9mb3Jtcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLG1DQUFtQztFQUNuQyxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHdCQUF3QjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig2MCwgMTAzLCAxNzgpO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbn1cclxuZm9ybSB7XHJcbiAgcG9zaXRpb246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmlzcXVlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","FormsComponent_div_10_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","formValueControl","errors","FormsComponent","constructor","fb","ngOnInit","loginform","group","name","required","password","email","get","dataSubmit","console","log","valid","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","FormsComponent_Template","rf","ctx","ɵɵlistener","FormsComponent_Template_form_ngSubmit_3_listener","ɵɵelement","FormsComponent_div_10_Template","invalid","dirty","touched"],"sources":["C:\\Users\\Public\\angularAsp\\employee\\src\\app\\teacher\\forms\\forms.component.ts","C:\\Users\\Public\\angularAsp\\employee\\src\\app\\teacher\\forms\\forms.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.css'],\n})\nexport class FormsComponent implements OnInit {\n  loginform?: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.loginform = this.fb.group({\n      name: ['', Validators.required],\n      password: [''],\n      email: [''],\n    });\n  }\n\n  formValueControl(name) {\n    return this.loginform.get(name);\n  }\n  dataSubmit() {\n    console.log(this.loginform.valid);\n  }\n}\n","<!-- <p>forms works!</p> -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-4 offset-4\">\n      <!-- <form [formGroup]=\"loginform\" (ngsubmit)=\"dataSubmit()\"> -->\n      <form [formGroup]=\"loginform\" (ngSubmit)=\"dataSubmit()\">\n        <h1>Login Form</h1>\n        <div class=\"mt-3\">\n          <label for=\"name\" class=\"form-label\">Name</label>\n          <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Enter Name\" />\n          <div\n            *ngIf=\"\n              formValueControl('name').invalid &&\n              (formValueControl('name').dirty ||\n                formValueControl('name').touched)\n            \"\n          >\n            <div *ngIf=\"formValueControl('name').errors?.['required']\">\n              Name is Required\n            </div>\n          </div>\n        </div>\n        <div class=\"mt-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Enter password\"\n            formControlName=\"password\"\n          />\n        </div>\n        <div class=\"mt-3\">\n          <label for=\"email\" class=\"form-label\">email</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Enter Valid Email\"\n            formControlName=\"email\"\n          />\n        </div>\n        <div class=\"mt-2\">\n          <button type=\"submit\" class=\"btn-btn-submit\">Submit</button>\n          <!-- <button\n          type=\"submit\"\n          [disabled]=\"loginform.invalid\"\n          class=\"btn-btn-submit\"\n        >\n          Submit\n        </button> -->\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;ICgBvDC,EAAA,CAAAC,cAAA,UAA2D;IACzDD,EAAA,CAAAE,MAAA,yBACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IATRH,EAAA,CAAAC,cAAA,UAMC;IACCD,EAAA,CAAAI,UAAA,IAAAC,oCAAA,iBAEM;IACRL,EAAA,CAAAG,YAAA,EAAM;;;;IAHEH,EAAA,CAAAM,SAAA,GAAmD;IAAnDN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,gBAAA,SAAAC,MAAA,kBAAAF,MAAA,CAAAC,gBAAA,SAAAC,MAAA,aAAmD;;;ADTrE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAgB;EAEtCC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACmB,QAAQ,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;EACJ;EAEAX,gBAAgBA,CAACQ,IAAI;IACnB,OAAO,IAAI,CAACF,SAAS,CAACM,GAAG,CAACJ,IAAI,CAAC;EACjC;EACAK,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC;EACnC;;AAlBWd,cAAc,C;mBAAdA,cAAc,EAAAX,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdjB,cAAc,C;QAAdA,cAAc;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP3BnC,EAAA,CAAAC,cAAA,aAAuB;MAIaD,EAAA,CAAAqC,UAAA,sBAAAC,iDAAA;QAAA,OAAYF,GAAA,CAAAd,UAAA,EAAY;MAAA,EAAC;MACrDtB,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,iBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACnBH,EAAA,CAAAC,cAAA,aAAkB;MACqBD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACjDH,EAAA,CAAAuC,SAAA,eAA0F;MAC1FvC,EAAA,CAAAI,UAAA,KAAAoC,8BAAA,iBAUM;MACRxC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAAkB;MACyBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACzDH,EAAA,CAAAuC,SAAA,gBAKE;MACJvC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAAkB;MACsBD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACnDH,EAAA,CAAAuC,SAAA,iBAKE;MACJvC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,eAAkB;MAC6BD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MApC1DH,EAAA,CAAAM,SAAA,GAAuB;MAAvBN,EAAA,CAAAO,UAAA,cAAA6B,GAAA,CAAArB,SAAA,CAAuB;MAMtBf,EAAA,CAAAM,SAAA,GAKb;MALaN,EAAA,CAAAO,UAAA,SAAA6B,GAAA,CAAA3B,gBAAA,SAAAgC,OAAA,KAAAL,GAAA,CAAA3B,gBAAA,SAAAiC,KAAA,IAAAN,GAAA,CAAA3B,gBAAA,SAAAkC,OAAA,EAKb"},"metadata":{},"sourceType":"module","externalDependencies":[]}